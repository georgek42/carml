type log_lvl =
    Debug |
    Info |
    Warn |
    Fatal


let log_lvl_to_int lvl: log_lvl -> int =
    match (lvl: log_lvl) with
    | Debug -> 0
    | Info -> 1
    | Warn -> 2
    | Fatal -> 3


let print_string s: string -> unit = ()

let mk_log lvl msg lvl': log_lvl -> string -> log_lvl -> unit =
    let l: int = (log_lvl_to_int (lvl: log_lvl)) in
    let l': int = (log_lvl_to_int (lvl': log_lvl)) in
    match (l' >= l: bool) with
    | true -> (print_string (msg: string))
    | _ -> ()


let main: unit =
    let log: string -> log_lvl -> unit = mk_log (1: int) in
    log ("debug": string) (Debug: log_lvl);
    log ("info": string) (Info: log_lvl);
    log ("warn": string) (Warn: log_lvl);
    log ("fatal": string) (Fatal: log_lvl);
    ()
